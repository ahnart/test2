<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/js/*" />
	<resources mapping="/imgUpload/**" location="/resources/imgUpload/" />
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	<resources mapping="/ckUpload/**" location="/resources/ckUpload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.example.coco" />





	<beans:bean id="AdminInterceptor" class="com.example.coco.AdminInterceptor"></beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/coco/**" />
			<beans:ref bean="AdminInterceptor" />
		</interceptor>
	</interceptors>


	<!-- oauth login NAVER -->
	<beans:bean id="naverClientID" class="java.lang.String">
		<beans:constructor-arg value="LlW1lx5Go3f8CmzGpcW7" />
	</beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg value="fBaZsP5udO" />
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8181/auth/naver/callback" />
	</beans:bean>
	
	<beans:bean id="naverSns" class="com.example.auth.SnsValue">
		<beans:constructor-arg value="naver" />
		<beans:constructor-arg ref="naverClientID" />
		<beans:constructor-arg ref="naverClientSecret" />
		<beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>

	<!-- oauth login Google -->
	<beans:bean id="googleClientID" class="java.lang.String">
		<beans:constructor-arg value="392788246663-51jtgvprgdlr25t85008j677kp85k8qn.apps.googleusercontent.com" />
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
		<beans:constructor-arg value="eBSsvgCrSo91UTzCIf-qi13P" />
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8181/auth/google/callback" />
	</beans:bean>
	
	<beans:bean id="googleSns" class="com.example.auth.SnsValue">
		<beans:constructor-arg value="google" />
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
		<beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
	<beans:bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
	</beans:bean>

	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email" />
		<!-- <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" /> -->
		<beans:property name="redirectUri" ref="googleRedirectUrl" />
	</beans:bean>
	


</beans:beans>
